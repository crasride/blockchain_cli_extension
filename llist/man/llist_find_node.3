.TH llist_find_node 3 "June 2018" "Holberton School"

.SH NAME
llist_find_node - Finds a node in a list

.SH SYNOPSIS
.B #include <llist.h>

.BI "typedef void *" "llist_node_t" ";"

.BI "typedef int (*" "node_ident_t" ")(llist_node_t, void *);"

.BI "llist_node_t llist_find_node(llist_t *" "list" ", node_ident_t " "identifier" ", void *" "arg" ");"

.SH DESCRIPTION
.BR "llist_find_node" "() will locate a node within the linked list pointed to by"
.IR "list" "."

.RI "The node is identified using the " "identifier" " function."
.RI "This function will be called for each node in the list, passing " "arg" " as a second parameter."
.RI "When this function returns a non-zero value, the current node is returned."

.SH RETURN VALUE
.RB "Upon success, " "llist_find_node" "() returns a pointer to the located node."
.RB "Otherwise, " "NULL" " is returned, and the global variable"
.IR "llist_errno" " is set with the appropriate value."

.SH ERRORS
.B LLIST_NULL_ARGUMENT
.RS
.RI "Either " "list" " or " "identifier" " points to NULL."
.RE

.B LLIST_NODE_NOT_FOUND
.RS
.R "The node could not be found"
.RE

.B LLIST_MULTITHREAD_ISSUE
.RS
.RI "Only if " "flags" " was set to"
.BR "MT_SUPPORT_TRUE" " when"
.IR "list" " was created. An error occured whith multithreading safety."
.RE

.SH SEE ALSO
.BR "llist_add_node" "(3),"
.BR "llist_append" "(3),"
.BR "llist_create" "(3),"
.BR "llist_destroy" "(3),"
.BR "llist_empty" "(3),"
.BR "llist_for_each" "(3),"
.BR "llist_get_head" "(3),"
.BR "llist_get_node_at" "(3),"
.BR "llist_get_tail" "(3),"
.BR "llist_insert_node" "(3),"
.BR "llist_pop" "(3),"
.BR "llist_remove_node" "(3),"
.BR "llist_reverse" "(3),"
.BR "llist_size" "(3),"
.BR "llist_sort" "(3)"
