.TH llist_add_node 3 "June 2018" "Holberton School"

.SH NAME
llist_add_node - Adds a node to a linked list

.SH SYNOPSIS
.B #include <llist.h>

.BI "typedef void *" "llist_node_t" ";"

.BI "int llist_add_node(llist_t *" "list" ", llist_node_t " "node" ", int " "flags" ");"

.SH DESCRIPTION
.BR "llist_add_node" "() will add a new node to the linked list pointed to by"
.IR "list" "."

.RI "The address held by " "node" " will be stored inside the new node."

.IR "flags" " can hold either of the following values:"
.RS

.B ADD_NODE_FRONT
.RS
The new node will be pushed at the head of the list
.RE
.RE

.RS
.B ADD_NODE_REAR
.RS
The new node will be pushed at the tail of the list
.RE
.RE

.SH RETURN VALUE
.RB "Upon success, " "llist_add_node" "() returns 0. Otherwise, -1 is returned, and the global variable"
.IR "llist_errno" " is set with the appropriate value."

.SH ERRORS
.B LLIST_NULL_ARGUMENT
.RS
.IR "list" " points to NULL."
.RE

.B LLIST_MALLOC_ERROR
.RS
.BR "malloc" "(3) returned an error."
.RE

.B LLIST_MULTITHREAD_ISSUE
.RS
.RI "Only if " "flags" " was set to"
.BR "MT_SUPPORT_TRUE" " when"
.IR "list" " was created. An error occured whith multithreading safety."
.RE

.SH SEE ALSO
.BR "llist_append" "(3),"
.BR "llist_create" "(3),"
.BR "llist_destroy" "(3),"
.BR "llist_empty" "(3),"
.BR "llist_find_node" "(3),"
.BR "llist_for_each" "(3),"
.BR "llist_get_head" "(3),"
.BR "llist_get_node_at" "(3),"
.BR "llist_get_tail" "(3),"
.BR "llist_insert_node" "(3),"
.BR "llist_pop" "(3),"
.BR "llist_remove_node" "(3),"
.BR "llist_reverse" "(3),"
.BR "llist_size" "(3),"
.BR "llist_sort" "(3)"
