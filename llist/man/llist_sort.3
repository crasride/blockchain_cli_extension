.TH llist_sort 3 "June 2018" "Holberton School"

.SH NAME
llist_sort - Sorts a list

.SH SYNOPSIS
.B #include <llist.h>

.BI "typedef int (*" "node_cmp_t" ")(llist_node_t, llist_node_t, void *);"

.BI "int llist_sort(llist_t *list, node_cmp_t cmp_func, void *arg, int flags);"

.SH DESCRIPTION
.BR "llist_sort" "() will sort the list pointed to by"
.IR "list" "."

.RI "The function " "cmp_func" " will be used to compare two nodes. This function must return an integer less than, equal to, or greater than zero if the first node, respectively, is less than, equal, or greater than the second node."
.IR "arg" " will also be passed to " "cmp_func" "."

.IR "flags" " can hold either of the following values:"
.RS

.B SORT_LIST_ASC
.RS
The list will be sorted in ascending order
.RE
.RE

.RS
.B SORT_LIST_DESC
.RS
The list will be sorted in descending order
.RE
.RE

.SH RETURN VALUE
.RB "Upon success, " "llist_sort" "() returns 0. Otherwise, -1 is returned, and the global variable"
.IR "llist_errno" " is set with the appropriate value."

.SH ERRORS
.B LLIST_NULL_ARGUMENT
.RS
.RI "Either " "list" " or " "cmp_func" " points to NULL."
.RE

.B LLIST_MULTITHREAD_ISSUE
.RS
.RI "Only if " "flags" " was set to"
.BR "MT_SUPPORT_TRUE" " when"
.IR "list" " was created. An error occured whith multithreading safety."
.RE

.SH SEE ALSO
.BR "llist_add_node" "(3),"
.BR "llist_append" "(3),"
.BR "llist_create" "(3),"
.BR "llist_destroy" "(3),"
.BR "llist_empty" "(3),"
.BR "llist_find_node" "(3),"
.BR "llist_for_each" "(3),"
.BR "llist_get_head" "(3),"
.BR "llist_get_node_at" "(3),"
.BR "llist_get_tail" "(3),"
.BR "llist_insert_node" "(3),"
.BR "llist_pop" "(3),"
.BR "llist_remove_node" "(3),"
.BR "llist_reverse" "(3),"
.BR "llist_size" "(3)"
